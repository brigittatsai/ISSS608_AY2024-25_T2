{
  "hash": "56d2afad3afb11a2ec8276d9cb2b2963",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1\"\nauthor: \"Brigitta Karen Tsai\"\ndate: \"February 8, 2025\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n---\n\n\n# Ship Performance Analysis\n\n# 1 Overview\n\n## 1.1 The Background\n\n## 1.2 The Data\n\nThe following are the details of the data source for this analysis:\n\n1.  Data Source: [Ship Performance Clustering Dataset](https://www.kaggle.com/datasets/jeleeladekunlefijabi/ship-performance-clustering-dataset)\n2.  Dataset Size: 18 columns x 2,736 rows\n3.  Data format: csv file\n\n## 1.3 The Task\n\nAs the graphical editor of the media company, an article about ship performance in the Gulf of Guinea will be written and published. Hence, this paper will include the following contents:\n\n1.  Exploratory Data Analysis of ship performance based on different underlying factors\n2.  Visualization of key operational metrics of the ship for future performance optimizations in the maritime industry\n\n# 2 Getting Started\n\n## 2.1 Load and Install Packages\n\nFor this analysis, **tidyverse** and **ggplot2** packages will be used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggrepel, patchwork, ggthemes, hrbrthemes, ggiraph,\n               plotly, DT, readxl, gifski, gapminder, gganimate, ggdist, ggridges,\n               colorspace, ggstatsplot, crosstalk, FunnelPlotR, knitr, scales)\n```\n:::\n\n\n## 2.2 Import Data\n\nImport ship performance dataset to get started with the analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship <- read_csv(\"data/Ship.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 2736 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (5): Ship_Type, Route_Type, Engine_Type, Maintenance_Status, Weather_C...\ndbl  (12): Speed_Over_Ground_knots, Engine_Power_kW, Distance_Traveled_nm, D...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n# 3 Data Preparation\n\n## 3.1 Select Variables\n\nBefore we begin with the analysis, let us do some variable analysis and check the columns that we will be using for this analysis. Each row of the dataset represents the **performance metrics** and **attributes** for a specific **voyage/ship** over a given timeframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(ship)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Date\"                    \"Ship_Type\"              \n [3] \"Route_Type\"              \"Engine_Type\"            \n [5] \"Maintenance_Status\"      \"Speed_Over_Ground_knots\"\n [7] \"Engine_Power_kW\"         \"Distance_Traveled_nm\"   \n [9] \"Draft_meters\"            \"Weather_Condition\"      \n[11] \"Cargo_Weight_tons\"       \"Operational_Cost_USD\"   \n[13] \"Revenue_per_Voyage_USD\"  \"Turnaround_Time_hours\"  \n[15] \"Efficiency_nm_per_kWh\"   \"Seasonal_Impact_Score\"  \n[17] \"Weekly_Voyage_Count\"     \"Average_Load_Percentage\"\n```\n\n\n:::\n:::\n\n\nFor easier read, let us list down all the columns in the table below to analyse the data types and the description.\n\n::: tabset-pane\n# Ship Dataframe\n\n::: {.table .table-striped .table-hover .table-bordered}\n| Column Name             | Type           | Description                              |\n|-------------------------|----------------|------------------------------------------|\n| Date                    | date           | timestamp of data entry                  |\n| Ship_Type               | categorical    | types of vessel                          |\n| Route_Type              | categorical    | types of route                           |\n| Engine_Type             | categorical    | types of ship engine                     |\n| Maintenance_Status      | categorical    | current maintenance status               |\n| Speed_Over_Ground_knots | numerical      | average speed (knots)                    |\n| Engine_Power_kW         | numerical      | engine power output (kW)                 |\n| Distance_Traveled_nm    | numerical      | total distance travelled (nm)            |\n| Draft_meters            | numerical      | draft of the vessel (m)                  |\n| Weather_Condition       | categorical    | weather condition during operations      |\n| Cargo_Weight_tons       | numerical      | weight of goods on the ship (tons)       |\n| Operational_Cost_USD    | numerical      | total operational cost per voyage (USD)  |\n| Revenue_per_Voyage_USD  | numerical      | total revenue generated per voyage (USD) |\n| Turnaround_Time_hours   | numerical      | time taken per voyage (hours)            |\n| Efficiency_nm_per_kWh   | numerical      | energy efficiency (nm/kWh)               |\n| Seasonal_Impact_Score   | numerical      | *not listed in Kaggle*                   |\n| Weekly_Voyage_Count     | integer        | total no. of voyage per week             |\n| Average_Load_Percentage | percentage (%) | *not listed in Kaggle*                   |\n:::\n:::\n\n## 3.2 Remove Columns\n\nFrom the table, we will keep all the categorical and numerical columns to gain further insights on this dataset. There are 3 columns that we should remove from this dataset, which are **Date, Seasonal_Impact_Score** and **Average_Load_Percentage.**\n\n1.  **Date**: This column is removed because it only consists of the timestamp of the data entry, which is not necessarily value-add to this analysis.\n2.  **Seasonal_Impact_Score**: This column is removed because there is no description of how the value in this column is calculated. As there is no details on the column calculation, there will be no insights gained from analysing this column.\n3.  **Average_Load_Percentage**: This column is removed because there is no description and source of the column calculation, hence, there is no need to use this column for the analysis.\n\nThe 3 columns will be removed using the code chunk below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship <- ship %>% select(-c(\"Date\", \"Seasonal_Impact_Score\", \"Average_Load_Percentage\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nship\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,736 × 15\n   Ship_Type    Route_Type Engine_Type Maintenance_Status Speed_Over_Ground_kn…¹\n   <chr>        <chr>      <chr>       <chr>                               <dbl>\n 1 Container S… None       Heavy Fuel… Critical                             12.6\n 2 Fish Carrier Short-haul Steam Turb… Good                                 10.4\n 3 Container S… Long-haul  Diesel      Fair                                 20.7\n 4 Bulk Carrier Transocea… Steam Turb… Fair                                 21.1\n 5 Fish Carrier Transocea… Diesel      Fair                                 13.7\n 6 Fish Carrier Long-haul  Heavy Fuel… Fair                                 18.6\n 7 Fish Carrier Transocea… Heavy Fuel… Critical                             20.4\n 8 Container S… Short-haul Diesel      Critical                             23.5\n 9 None         Coastal    Heavy Fuel… Good                                 17.3\n10 Container S… Long-haul  Diesel      Fair                                 23.2\n# ℹ 2,726 more rows\n# ℹ abbreviated name: ¹​Speed_Over_Ground_knots\n# ℹ 10 more variables: Engine_Power_kW <dbl>, Distance_Traveled_nm <dbl>,\n#   Draft_meters <dbl>, Weather_Condition <chr>, Cargo_Weight_tons <dbl>,\n#   Operational_Cost_USD <dbl>, Revenue_per_Voyage_USD <dbl>,\n#   Turnaround_Time_hours <dbl>, Efficiency_nm_per_kWh <dbl>,\n#   Weekly_Voyage_Count <dbl>\n```\n\n\n:::\n:::\n\n\n## 3.3 Handling Missing Value\n\n### 3.3.1 Categorical Column\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(ship$Ship_Type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  Bulk Carrier Container Ship   Fish Carrier           None         Tanker \n           669            635            653            136            643 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(ship$Route_Type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n     Coastal    Long-haul         None   Short-haul Transoceanic \n         650          686          136          626          638 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(ship$Engine_Type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n              Diesel Heavy Fuel Oil (HFO)                 None \n                 892                  853                  136 \n       Steam Turbine \n                 855 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(ship$Maintenance_Status)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCritical     Fair     Good     None \n     860      867      873      136 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(ship$Weather_Condition)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n    Calm Moderate     None    Rough \n     893      891      136      816 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nship <- ship[ship$Ship_Type != \"None\", ]\nship <- ship[ship$Route_Type != \"None\", ]\nship <- ship[ship$Engine_Type != \"None\", ]\nship <- ship[ship$Maintenance_Status != \"None\", ]\nship <- ship[ship$Weather_Condition != \"None\", ]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(ship)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2127   15\n```\n\n\n:::\n:::\n\n\n### 3.3.2 Numerical Column\n\nIn this section, we will further clean numerical data type column to ensure the entire dataset is clean. The code chunks below will check the sum of null values of each numerical column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(ship$Speed_Over_Ground_knots))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(ship$Engine_Power_kW))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(ship$Distance_Traveled_nm))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(ship$Draft_meters))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(ship$Cargo_Weight_tons))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(ship$Operational_Cost_USD))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(ship$Revenue_per_Voyage_USD))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(ship$Turnaround_Time_hours))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(ship$Efficiency_nm_per_kWh))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(ship$Weekly_Voyage_Count))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(ship)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,127\nColumns: 15\n$ Ship_Type               <chr> \"Fish Carrier\", \"Container Ship\", \"Bulk Carrie…\n$ Route_Type              <chr> \"Short-haul\", \"Long-haul\", \"Transoceanic\", \"Tr…\n$ Engine_Type             <chr> \"Steam Turbine\", \"Diesel\", \"Steam Turbine\", \"D…\n$ Maintenance_Status      <chr> \"Good\", \"Fair\", \"Fair\", \"Fair\", \"Fair\", \"Criti…\n$ Speed_Over_Ground_knots <dbl> 10.38758, 20.74975, 21.05510, 13.74278, 18.616…\n$ Engine_Power_kW         <dbl> 1796.0574, 1648.5567, 915.2618, 1089.7218, 217…\n$ Distance_Traveled_nm    <dbl> 1060.4864, 658.8741, 1126.8225, 1445.2812, 723…\n$ Draft_meters            <dbl> 14.653083, 7.199261, 11.789063, 9.727833, 14.9…\n$ Weather_Condition       <chr> \"Rough\", \"Moderate\", \"Moderate\", \"Moderate\", \"…\n$ Cargo_Weight_tons       <dbl> 162.3947, 178.0409, 1737.3853, 260.5951, 1912.…\n$ Operational_Cost_USD    <dbl> 483388.00, 448543.40, 261349.61, 287718.38, 18…\n$ Revenue_per_Voyage_USD  <dbl> 883765.79, 394018.75, 87551.38, 676121.46, 776…\n$ Turnaround_Time_hours   <dbl> 63.24820, 49.41815, 22.40911, 64.15823, 47.476…\n$ Efficiency_nm_per_kWh   <dbl> 0.2903614, 0.4995945, 0.7029057, 1.3313431, 1.…\n$ Weekly_Voyage_Count     <dbl> 6, 9, 1, 8, 7, 3, 6, 2, 9, 4, 3, 7, 7, 2, 4, 3…\n```\n\n\n:::\n:::\n\n\naverage operational cost per ship type, average revenue per ship type, stats of voyage per week\n\n## 3.4 Check for Outliers in Numerical Column\n\nThere are total of 10 numerical columns that we can use for our statistical analysis. In this section, we will do an individual column check to see whether there is outliers affecting the column of the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot.stats(ship$Speed_Over_Ground_knots)$out\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nnumeric(0)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot.stats(ship$Engine_Power_kW)$out\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nnumeric(0)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot.stats(ship$Distance_Traveled_nm)$out\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nnumeric(0)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot.stats(ship$Draft_meters)$out\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nnumeric(0)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot.stats(ship$Operational_Cost_USD)$out\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nnumeric(0)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot.stats(ship$Cargo_Weight_tons)$out\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nnumeric(0)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot.stats(ship$Revenue_per_Voyage_USD)$out\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nnumeric(0)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot.stats(ship$Turnaround_Time_hours)$out\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nnumeric(0)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot.stats(ship$Efficiency_nm_per_kWh)$out\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nnumeric(0)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot.stats(ship$Weekly_Voyage_Count)$out\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nnumeric(0)\n```\n\n\n:::\n:::\n\n\nThe result from the codes above shows that there are no potential outliers affecting the dataset.\n\n## 3.5 Derive New Columns\n\nTo gain more insights on this analysis, let us derive a new column to find out the profit gained on each voyage of the ships. The code chunk below will use **mutate()** to derive the new column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship <- ship %>% \n  mutate(Profit_per_Voyage_USD = Revenue_per_Voyage_USD - Operational_Cost_USD)\n```\n:::\n\n\n# 4 Exploratory Data Analysis\n\n## 4.1 Profit Analysis\n\nLet us plot a the distribution of profit earned per voyage using the histogram below.\n\n::: panel-tabset\n### Plot\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nScale for x is already present.\nAdding another scale for x, which will replace the existing scale.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ship, aes(x = Profit_per_Voyage_USD)) + \n  geom_histogram(bins = 50,\n                 color = \"black\",\n                 fill = \"grey\") + \n  coord_cartesian(xlim=c(-500000,1000000),\n                  ylim=c(0,80)) + \n  scale_x_continuous(\n    breaks = seq(-500000, 1000000, by = 100000),\n    labels = scales::comma\n  ) +\n  scale_x_continuous(NULL,               \n                     breaks = seq(-500000, 1000000, by = 250000)) +\n  theme_gray()\n```\n:::\n\n:::\n\n## 4.2 Analysing Cost of Ship Operations\n\n::: panel-tabset\n## Operational Cost\n\nIn the code chunk below, we will show the average operational cost according to the ship type. We will set the maximum limit of the y-axis to 300,000.\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_cost <- ship %>%\n  group_by(Ship_Type) %>%\n  summarise(Average_Cost = mean(Operational_Cost_USD, na.rm = TRUE))\n\nggplot(data = avg_cost, aes(x = Ship_Type, y = Average_Cost, fill = Ship_Type)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  scale_y_continuous(labels = comma, limits = c(0, 300000), expand = c(0, 0)) +\n  labs(title = \"Average Operational Cost by Ship Type\", x = \"Ship Type\", y = \"Average Cost\") +\n  theme_light() + \n  theme(aspect.ratio = 1)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\nFrom the bar chart, you can roughly see that on average, container ship has the highest cost for operations. But there is not much difference highlighted between each ship type.\n\n## Details\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrange(ship$Operational_Cost_USD)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  10097.44 499734.87\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ship,\n       aes(x = Ship_Type,\n           y = Operational_Cost_USD)) +\n  geom_boxplot(width = .2,\n               outlier.colour = \"red\") +\n  stat_dots(side = \"left\",\n            justification = 1.2,\n            binwidth = 1000,\n            dotsize = 7) +\n  scale_y_continuous(labels = comma, limits = c(0, 500000), expand = c(0, 0))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmax(ship$Revenue_per_Voyage_USD)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 999811.9\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ship, aes(x = Operational_Cost_USD)) + \n  geom_histogram(bins = 50,\n                 color = \"black\",\n                 fill = \"grey\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}