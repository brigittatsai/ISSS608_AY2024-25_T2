{
  "hash": "0f2e2208129f526fdc74d8fbb5a5d8f5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 3\"\nauthor: \"Brigitta Karen Tsai\"\ndate: \"March 22, 2025\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n---\n\n\n# Prototyping Modules for Visual Analytics Shiny Application\n\n# 1 Getting Started\n\n## 1.1 Install and Load R Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sp, sf, raster, spatstat, tmap, tidyverse,\n               spNetwork, tmaptools, raster, leaflet, patchwork, gridExtra,\n               ggplot2, png, grid, terra, gstat, viridis, automap, stars)\n```\n:::\n\n\n# 2 Import Data\n\n## 2.1 Import Aspatial Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather <- read_csv(\"data/aspatial/weather.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 6222 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): station\ndbl (12): year, month, day, daily_rainfall_total_mm, highest_30_min_rainfall...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstation <- read_csv(\"data/aspatial/station.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 63 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Station\ndbl (2): Latitude, Longitude\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n## 2.2 Import Geospatial Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MPSZ-2019\") %>% \n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `C:\\brigittatsai\\ISSS608_AY2024-25_T2\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n# 3 Data Preparation\n\n## 3.1 Join Weather Data and Station Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndaily_weather <- left_join(station, weather,\n                         by = c(\"Station\" = \"station\"),\n                         relationship = \"many-to-many\")\n```\n:::\n\n\n## 3.2 Set CRS\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndaily_weather <- st_as_sf(daily_weather, \n                      coords = c(\"Longitude\",\n                                 \"Latitude\"),\n                      crs= 4326) %>%\n  st_transform(crs = 3414)\n```\n:::\n\n\n## 3.3 Match Station Names\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsort(unique(daily_weather$Station))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Admiralty\"               \"Admiralty (West)\"       \n [3] \"Ang Mo Kio\"              \"Boon Lay (East)\"        \n [5] \"Boon Lay (West)\"         \"Botanic Garden\"         \n [7] \"Buangkok\"                \"Bukit Panjang\"          \n [9] \"Bukit Timah\"             \"Buona Vista\"            \n[11] \"Chai Chee\"               \"Changi\"                 \n[13] \"Choa Chu Kang (Central)\" \"Choa Chu Kang (South)\"  \n[15] \"Choa Chu Kang (West)\"    \"Clementi\"               \n[17] \"Dhoby Ghaut\"             \"East Coast Parkway\"     \n[19] \"Jurong (East)\"           \"Jurong (North)\"         \n[21] \"Jurong (West)\"           \"Jurong Island\"          \n[23] \"Jurong Pier\"             \"Kampong Bahru\"          \n[25] \"Kent Ridge\"              \"Khatib\"                 \n[27] \"Kranji Reservoir\"        \"Lim Chu Kang\"           \n[29] \"Lower Peirce Reservoir\"  \"Macritchie Reservoir\"   \n[31] \"Mandai\"                  \"Marina Barrage\"         \n[33] \"Marine Parade\"           \"Newton\"                 \n[35] \"Nicoll Highway\"          \"Pasir Panjang\"          \n[37] \"Pasir Ris (Central)\"     \"Pasir Ris (West)\"       \n[39] \"Paya Lebar\"              \"Pulau Ubin\"             \n[41] \"Punggol\"                 \"Queenstown\"             \n[43] \"Seletar\"                 \"Semakau Island\"         \n[45] \"Sembawang\"               \"Sentosa Island\"         \n[47] \"Serangoon\"               \"Serangoon North\"        \n[49] \"Simei\"                   \"Somerset (Road)\"        \n[51] \"Tai Seng\"                \"Tanjong Katong\"         \n[53] \"Tanjong Pagar\"           \"Tengah\"                 \n[55] \"Toa Payoh\"               \"Tuas\"                   \n[57] \"Tuas South\"              \"Tuas West\"              \n[59] \"Ulu Pandan\"              \"Upper Peirce Reservoir\" \n[61] \"Upper Thomson\"           \"Whampoa\"                \n[63] \"Yishun\"                 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsort(unique(mpsz$SUBZONE_N))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] \"ADMIRALTY\"                     \"AIRPORT ROAD\"                 \n  [3] \"ALEXANDRA HILL\"                \"ALEXANDRA NORTH\"              \n  [5] \"ALJUNIED\"                      \"ANAK BUKIT\"                   \n  [7] \"ANCHORVALE\"                    \"ANG MO KIO TOWN CENTRE\"       \n  [9] \"ANSON\"                         \"BAHAR\"                        \n [11] \"BALESTIER\"                     \"BANGKIT\"                      \n [13] \"BAYFRONT SUBZONE\"              \"BAYSHORE\"                     \n [15] \"BEDOK NORTH\"                   \"BEDOK RESERVOIR\"              \n [17] \"BEDOK SOUTH\"                   \"BENCOOLEN\"                    \n [19] \"BENDEMEER\"                     \"BENOI SECTOR\"                 \n [21] \"BIDADARI\"                      \"BISHAN EAST\"                  \n [23] \"BOAT QUAY\"                     \"BOON KENG\"                    \n [25] \"BOON LAY PLACE\"                \"BOON TECK\"                    \n [27] \"BOULEVARD\"                     \"BRADDELL\"                     \n [29] \"BRAS BASAH\"                    \"BRICKLAND\"                    \n [31] \"BRICKWORKS\"                    \"BUGIS\"                        \n [33] \"BUKIT BATOK CENTRAL\"           \"BUKIT BATOK EAST\"             \n [35] \"BUKIT BATOK SOUTH\"             \"BUKIT BATOK WEST\"             \n [37] \"BUKIT HO SWEE\"                 \"BUKIT MERAH\"                  \n [39] \"CAIRNHILL\"                     \"CECIL\"                        \n [41] \"CENTRAL SUBZONE\"               \"CENTRAL WATER CATCHMENT\"      \n [43] \"CHANGI AIRPORT\"                \"CHANGI BAY\"                   \n [45] \"CHANGI POINT\"                  \"CHANGI WEST\"                  \n [47] \"CHATSWORTH\"                    \"CHENG SAN\"                    \n [49] \"CHIN BEE\"                      \"CHINA SQUARE\"                 \n [51] \"CHINATOWN\"                     \"CHOA CHU KANG CENTRAL\"        \n [53] \"CHOA CHU KANG NORTH\"           \"CHONG BOON\"                   \n [55] \"CITY HALL\"                     \"CITY TERMINALS\"               \n [57] \"CLARKE QUAY\"                   \"CLEANTECH\"                    \n [59] \"CLEMENTI CENTRAL\"              \"CLEMENTI NORTH\"               \n [61] \"CLEMENTI WEST\"                 \"CLEMENTI WOODS\"               \n [63] \"CLIFFORD PIER\"                 \"COMMONWEALTH\"                 \n [65] \"COMPASSVALE\"                   \"CONEY ISLAND\"                 \n [67] \"CORONATION ROAD\"               \"CRAWFORD\"                     \n [69] \"DAIRY FARM\"                    \"DEFU INDUSTRIAL PARK\"         \n [71] \"DEPOT ROAD\"                    \"DHOBY GHAUT\"                  \n [73] \"DOVER\"                         \"DUNEARN\"                      \n [75] \"EAST COAST\"                    \"EVERTON PARK\"                 \n [77] \"FABER\"                         \"FAJAR\"                        \n [79] \"FARRER COURT\"                  \"FARRER PARK\"                  \n [81] \"FERNVALE\"                      \"FLORA DRIVE\"                  \n [83] \"FOREST HILL\"                   \"FORT CANNING\"                 \n [85] \"FRANKEL\"                       \"GALI BATU\"                    \n [87] \"GARDEN\"                        \"GEYLANG BAHRU\"                \n [89] \"GEYLANG EAST\"                  \"GHIM MOH\"                     \n [91] \"GOMBAK\"                        \"GOODWOOD PARK\"                \n [93] \"GREENWOOD PARK\"                \"GUILIN\"                       \n [95] \"GUL BASIN\"                     \"GUL CIRCLE\"                   \n [97] \"HENDERSON HILL\"                \"HILLCREST\"                    \n [99] \"HILLVIEW\"                      \"HOLLAND DRIVE\"                \n[101] \"HOLLAND ROAD\"                  \"HONG KAH\"                     \n[103] \"HONG KAH NORTH\"                \"HOUGANG CENTRAL\"              \n[105] \"HOUGANG EAST\"                  \"HOUGANG WEST\"                 \n[107] \"INSTITUTION HILL\"              \"INTERNATIONAL BUSINESS PARK\"  \n[109] \"ISTANA NEGARA\"                 \"JELEBU\"                       \n[111] \"JOO KOON\"                      \"JOO SENG\"                     \n[113] \"JURONG GATEWAY\"                \"JURONG ISLAND AND BUKOM\"      \n[115] \"JURONG PORT\"                   \"JURONG RIVER\"                 \n[117] \"JURONG WEST CENTRAL\"           \"KAKI BUKIT\"                   \n[119] \"KALLANG BAHRU\"                 \"KALLANG WAY\"                  \n[121] \"KAMPONG BUGIS\"                 \"KAMPONG GLAM\"                 \n[123] \"KAMPONG JAVA\"                  \"KAMPONG TIONG BAHRU\"          \n[125] \"KAMPONG UBI\"                   \"KANGKAR\"                      \n[127] \"KATONG\"                        \"KEAT HONG\"                    \n[129] \"KEBUN BAHRU\"                   \"KEMBANGAN\"                    \n[131] \"KENT RIDGE\"                    \"KHATIB\"                       \n[133] \"KIAN TECK\"                     \"KIM KEAT\"                     \n[135] \"KOVAN\"                         \"KRANJI\"                       \n[137] \"LAKESIDE (BUSINESS)\"           \"LAKESIDE (LEISURE)\"           \n[139] \"LAVENDER\"                      \"LEEDON PARK\"                  \n[141] \"LEONIE HILL\"                   \"LIM CHU KANG\"                 \n[143] \"LITTLE INDIA\"                  \"LIU FANG\"                     \n[145] \"LORONG 8 TOA PAYOH\"            \"LORONG AH SOO\"                \n[147] \"LORONG CHUAN\"                  \"LORONG HALUS\"                 \n[149] \"LORONG HALUS NORTH\"            \"LOWER SELETAR\"                \n[151] \"LOYANG EAST\"                   \"LOYANG WEST\"                  \n[153] \"MACKENZIE\"                     \"MACPHERSON\"                   \n[155] \"MALCOLM\"                       \"MANDAI EAST\"                  \n[157] \"MANDAI ESTATE\"                 \"MANDAI WEST\"                  \n[159] \"MARGARET DRIVE\"                \"MARINA CENTRE\"                \n[161] \"MARINA EAST\"                   \"MARINA EAST (MP)\"             \n[163] \"MARINA SOUTH\"                  \"MARINE PARADE\"                \n[165] \"MARITIME SQUARE\"               \"MARYMOUNT\"                    \n[167] \"MATILDA\"                       \"MAXWELL\"                      \n[169] \"MEI CHIN\"                      \"MIDVIEW\"                      \n[171] \"MONK'S HILL\"                   \"MOULMEIN\"                     \n[173] \"MOUNT EMILY\"                   \"MOUNT PLEASANT\"               \n[175] \"MOUNTBATTEN\"                   \"MURAI\"                        \n[177] \"NASSIM\"                        \"NATIONAL UNIVERSITY OF S'PORE\"\n[179] \"NATURE RESERVE\"                \"NEE SOON\"                     \n[181] \"NEWTON CIRCUS\"                 \"NICOLL\"                       \n[183] \"NORTH-EASTERN ISLANDS\"         \"NORTH COAST\"                  \n[185] \"NORTHLAND\"                     \"NORTHSHORE\"                   \n[187] \"ONE NORTH\"                     \"ONE TREE HILL\"                \n[189] \"ORANGE GROVE\"                  \"OXLEY\"                        \n[191] \"PANDAN\"                        \"PANG SUA\"                     \n[193] \"PARK\"                          \"PASIR PANJANG 1\"              \n[195] \"PASIR PANJANG 2\"               \"PASIR RIS CENTRAL\"            \n[197] \"PASIR RIS DRIVE\"               \"PASIR RIS PARK\"               \n[199] \"PASIR RIS WAFER FAB PARK\"      \"PASIR RIS WEST\"               \n[201] \"PATERSON\"                      \"PAYA LEBAR EAST\"              \n[203] \"PAYA LEBAR NORTH\"              \"PAYA LEBAR WEST\"              \n[205] \"PEARL'S HILL\"                  \"PEI CHUN\"                     \n[207] \"PENG SIANG\"                    \"PENJURU CRESCENT\"             \n[209] \"PEOPLE'S PARK\"                 \"PHILLIP\"                      \n[211] \"PIONEER SECTOR\"                \"PLAB\"                         \n[213] \"PLANTATION\"                    \"PORT\"                         \n[215] \"POTONG PASIR\"                  \"PULAU PUNGGOL BARAT\"          \n[217] \"PULAU PUNGGOL TIMOR\"           \"PULAU SELETAR\"                \n[219] \"PUNGGOL CANAL\"                 \"PUNGGOL FIELD\"                \n[221] \"PUNGGOL TOWN CENTRE\"           \"QUEENSWAY\"                    \n[223] \"RAFFLES PLACE\"                 \"REDHILL\"                      \n[225] \"RESERVOIR VIEW\"                \"RIDOUT\"                       \n[227] \"RIVERVALE\"                     \"ROBERTSON QUAY\"               \n[229] \"ROCHOR CANAL\"                  \"SAFTI\"                        \n[231] \"SAMULUN\"                       \"SAUJANA\"                      \n[233] \"SELEGIE\"                       \"SELETAR\"                      \n[235] \"SELETAR AEROSPACE PARK\"        \"SELETAR HILLS\"                \n[237] \"SEMAKAU\"                       \"SEMBAWANG CENTRAL\"            \n[239] \"SEMBAWANG EAST\"                \"SEMBAWANG HILLS\"              \n[241] \"SEMBAWANG NORTH\"               \"SEMBAWANG SPRINGS\"            \n[243] \"SEMBAWANG STRAITS\"             \"SENGKANG TOWN CENTRE\"         \n[245] \"SENGKANG WEST\"                 \"SENJA\"                        \n[247] \"SENNETT\"                       \"SENOKO NORTH\"                 \n[249] \"SENOKO SOUTH\"                  \"SENOKO WEST\"                  \n[251] \"SENTOSA\"                       \"SERANGOON CENTRAL\"            \n[253] \"SERANGOON GARDEN\"              \"SERANGOON NORTH\"              \n[255] \"SERANGOON NORTH IND ESTATE\"    \"SHANGRI-LA\"                   \n[257] \"SHIPYARD\"                      \"SIGLAP\"                       \n[259] \"SIMEI\"                         \"SIMPANG NORTH\"                \n[261] \"SIMPANG SOUTH\"                 \"SINGAPORE GENERAL HOSPITAL\"   \n[263] \"SINGAPORE POLYTECHNIC\"         \"SOMERSET\"                     \n[265] \"SOUTHERN GROUP\"                \"SPRINGLEAF\"                   \n[267] \"STRAITS VIEW\"                  \"SUDONG\"                       \n[269] \"SUNGEI ROAD\"                   \"SUNSET WAY\"                   \n[271] \"SWISS CLUB\"                    \"TAGORE\"                       \n[273] \"TAI SENG\"                      \"TAMAN JURONG\"                 \n[275] \"TAMPINES EAST\"                 \"TAMPINES NORTH\"               \n[277] \"TAMPINES WEST\"                 \"TANGLIN\"                      \n[279] \"TANGLIN HALT\"                  \"TANJONG IRAU\"                 \n[281] \"TANJONG PAGAR\"                 \"TANJONG RHU\"                  \n[283] \"TEBAN GARDENS\"                 \"TECK WHYE\"                    \n[285] \"TELOK BLANGAH DRIVE\"           \"TELOK BLANGAH RISE\"           \n[287] \"TELOK BLANGAH WAY\"             \"TENGAH INDUSTRIAL ESTATE\"     \n[289] \"TENGEH\"                        \"THE WHARVES\"                  \n[291] \"TIONG BAHRU\"                   \"TIONG BAHRU STATION\"          \n[293] \"TOA PAYOH CENTRAL\"             \"TOA PAYOH WEST\"               \n[295] \"TOH GUAN\"                      \"TOH TUCK\"                     \n[297] \"TOWNSVILLE\"                    \"TRAFALGAR\"                    \n[299] \"TUAS BAY\"                      \"TUAS NORTH\"                   \n[301] \"TUAS PROMENADE\"                \"TUAS VIEW\"                    \n[303] \"TUAS VIEW EXTENSION\"           \"TUKANG\"                       \n[305] \"TURF CLUB\"                     \"TYERSALL\"                     \n[307] \"ULU PANDAN\"                    \"UPPER PAYA LEBAR\"             \n[309] \"UPPER THOMSON\"                 \"VICTORIA\"                     \n[311] \"WATERWAY EAST\"                 \"WENYA\"                        \n[313] \"WEST COAST\"                    \"WOODGROVE\"                    \n[315] \"WOODLANDS EAST\"                \"WOODLANDS REGIONAL CENTRE\"    \n[317] \"WOODLANDS SOUTH\"               \"WOODLANDS WEST\"               \n[319] \"WOODLEIGH\"                     \"XILIN\"                        \n[321] \"YEW TEE\"                       \"YIO CHU KANG\"                 \n[323] \"YIO CHU KANG EAST\"             \"YIO CHU KANG NORTH\"           \n[325] \"YIO CHU KANG WEST\"             \"YISHUN CENTRAL\"               \n[327] \"YISHUN EAST\"                   \"YISHUN SOUTH\"                 \n[329] \"YISHUN WEST\"                   \"YUHUA EAST\"                   \n[331] \"YUHUA WEST\"                    \"YUNNAN\"                       \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- mpsz %>%\n  mutate(SUBZONE_N = case_when(\n    SUBZONE_N == \"ADMIRALTY\" ~ \"Admiralty\",\n    SUBZONE_N == \"AIRPORT ROAD\" ~ \"Airport Road\",\n    SUBZONE_N == \"ALEXANDRA HILL\" ~ \"Alexandra Hill\",\n    SUBZONE_N == \"ALEXANDRA NORTH\" ~ \"Alexandra North\",\n    SUBZONE_N == \"ALJUNIED\" ~ \"Aljunied\",\n    SUBZONE_N == \"ANAK BUKIT\" ~ \"Anak Bukit\",\n    SUBZONE_N == \"ANCHORVALE\" ~ \"Anchorvale\",\n    SUBZONE_N == \"ANG MO KIO\" ~ \"Ang Mo Kio\",\n    SUBZONE_N == \"ANSON\" ~ \"Anson\",\n    SUBZONE_N == \"BAHAR\" ~ \"Bahar\",\n    SUBZONE_N == \"BALESTIER\" ~ \"Balestier\",\n    SUBZONE_N == \"BANGKIT\" ~ \"Bangkit\",\n    SUBZONE_N == \"BAYFRONT SUBZONE\" ~ \"Bayfront Subzone\",\n    SUBZONE_N == \"BAYSHORE\" ~ \"Bayshore\",\n    SUBZONE_N == \"BEDOK NORTH\" ~ \"Bedok North\",\n    SUBZONE_N == \"BEDOK RESERVOIR\" ~ \"Bedok Reservoir\",\n    SUBZONE_N == \"BEDOK SOUTH\" ~ \"Bedok South\",\n    SUBZONE_N == \"BENCOOLEN\" ~ \"Bencoolen\",\n    SUBZONE_N == \"BENDEMEER\" ~ \"Bendemeer\",\n    SUBZONE_N == \"BENOI SECTOR\" ~ \"Benoi Sector\",\n    SUBZONE_N == \"BIDADARI\" ~ \"Bidadari\",\n    SUBZONE_N == \"BISHAN EAST\" ~ \"Bishan East\",\n    SUBZONE_N == \"BOAT QUAY\" ~ \"Boat Quay\",\n    SUBZONE_N == \"BOON KENG\" ~ \"Boon Keng\",\n    SUBZONE_N == \"BOON LAY (WEST)\" ~ \"Boon Lay (West)\",\n    SUBZONE_N == \"BOON TECK\" ~ \"Boon Teck\",\n    SUBZONE_N == \"BOULEVARD\" ~ \"Boulevard\",\n    SUBZONE_N == \"BRADDELL\" ~ \"Braddell\",\n    SUBZONE_N == \"BRAS BASAH\" ~ \"Bras Basah\",\n    SUBZONE_N == \"BRICKLAND\" ~ \"Brickland\",\n    SUBZONE_N == \"BRICKWORKS\" ~ \"Brickworks\",\n    SUBZONE_N == \"BUGIS\" ~ \"Bugis\",\n    SUBZONE_N == \"BUKIT BATOK CENTRAL\" ~ \"Bukit Batok Central\",\n    SUBZONE_N == \"BUKIT BATOK EAST\" ~ \"Bukit Batok East\",\n    SUBZONE_N == \"BUKIT BATOK SOUTH\" ~ \"Bukit Batok South\",\n    SUBZONE_N == \"BUKIT BATOK WEST\" ~ \"Bukit Batok West\",\n    SUBZONE_N == \"BUKIT HO SWEE\" ~ \"Bukit Ho Swee\",\n    SUBZONE_N == \"BUKIT MERAH\" ~ \"Bukit Merah\",\n    SUBZONE_N == \"BUKIT PANJANG\" ~ \"Bukit Panjang\",\n    SUBZONE_N == \"BUKIT TIMAH\" ~ \"Bukit Timah\",\n    SUBZONE_N == \"CAIRNHILL\" ~ \"Cairnhill\",\n    SUBZONE_N == \"CECIL\" ~ \"Cecil\",\n    SUBZONE_N == \"CENTRAL SUBZONE\" ~ \"Central Subzone\",\n    SUBZONE_N == \"CENTRAL WATER CATCHMENT\" ~ \"Central Water Catchment\",\n    SUBZONE_N == \"CHAI CHEE\" ~ \"Chai Chee\",\n    SUBZONE_N == \"CHANGI\" ~ \"Changi\",\n    SUBZONE_N == \"CHANGI BAY\" ~ \"Changi Bay\",\n    SUBZONE_N == \"CHANGI POINT\" ~ \"Changi Point\",\n    SUBZONE_N == \"CHANGI WEST\" ~ \"Changi West\",\n    SUBZONE_N == \"CHATSWORTH\" ~ \"Chatsworth\",\n    SUBZONE_N == \"CHENG SAN\" ~ \"Cheng San\",\n    SUBZONE_N == \"CHIN BEE\" ~ \"Chin Bee\",\n    SUBZONE_N == \"CHINA SQUARE\" ~ \"China Square\",\n    SUBZONE_N == \"CHINATOWN\" ~ \"Chinatown\",\n    SUBZONE_N == \"CHOA CHU KANG (CENTRAL)\" ~ \"Choa Chu Kang (Central)\",\n    SUBZONE_N == \"CHOA CHU KANG (NORTH)\" ~ \"Choa Chu Kang (North)\",\n    SUBZONE_N == \"CHONG BOON\" ~ \"Chong Boon\",\n    SUBZONE_N == \"CITY HALL\" ~ \"City Hall\",\n    SUBZONE_N == \"CITY TERMINALS\" ~ \"City Terminals\",\n    SUBZONE_N == \"CLARKE QUAY\" ~ \"Clarke Quay\",\n    SUBZONE_N == \"CLEANTECH\" ~ \"Cleantech\",\n    SUBZONE_N == \"CLEMENTI\" ~ \"Clementi\",\n    SUBZONE_N == \"CLEMENTI NORTH\" ~ \"Clementi North\",\n    SUBZONE_N == \"CLEMENTI WEST\" ~ \"Clementi West\",\n    SUBZONE_N == \"CLEMENTI WOODS\" ~ \"Clementi Woods\",\n    SUBZONE_N == \"CLIFFORD PIER\" ~ \"Clifford Pier\",\n    SUBZONE_N == \"COMMONWEALTH\" ~ \"Commonwealth\",\n    SUBZONE_N == \"COMPASSVALE\" ~ \"Compassvale\",\n    SUBZONE_N == \"CONEY ISLAND\" ~ \"Coney Island\",\n    SUBZONE_N == \"CORONATION ROAD\" ~ \"Coronation Road\",\n    SUBZONE_N == \"CRAWFORD\" ~ \"Crawford\",\n    SUBZONE_N == \"DAIRY FARM\" ~ \"Dairy Farm\",\n    SUBZONE_N == \"DEFU INDUSTRIAL PARK\" ~ \"Defu Industrial Park\",\n    SUBZONE_N == \"DEPOT ROAD\" ~ \"Depot Road\",\n    SUBZONE_N == \"DHOBY GHAUT\" ~ \"Dhoby Ghaut\",\n    SUBZONE_N == \"DOVER\" ~ \"Dover\",\n    SUBZONE_N == \"DUNEARN\" ~ \"Dunearn\",\n    SUBZONE_N == \"EAST COAST PARKWAY\" ~ \"East Coast Parkway\",\n    SUBZONE_N == \"EVERTON PARK\" ~ \"Everton Park\",\n    SUBZONE_N == \"FABER\" ~ \"Faber\",\n    SUBZONE_N == \"FAJAR\" ~ \"Fajar\",\n    SUBZONE_N == \"FARRER COURT\" ~ \"Farrer Court\",\n    SUBZONE_N == \"FARRER PARK\" ~ \"Farrer Park\",\n    SUBZONE_N == \"FERNVALE\" ~ \"Fernvale\",\n    TRUE ~ SUBZONE_N  # Keep other values unchanged\n  ))\n```\n:::\n\n\n## 3.4 Rename Columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather <- weather %>%\n  rename(Station = station,\n         Year = year,\n         Month = month,\n         Day = day,\n         rainfall_total = daily_rainfall_total_mm,\n         rainfall_30 = highest_30_min_rainfall_mm,\n         rainfall_60 = highest_60_min_rainfall_mm,\n         rainfall_120 = highest_120_min_rainfall_mm,\n         mean_temp = mean_temperature_c,\n         max_temp = maximum_temperature_c,\n         min_temp = minimum_temperature_c,\n         mean_wind = mean_wind_speed_km_h,\n         max_wind = max_wind_speed_km_h)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndaily_weather <- daily_weather %>%\n  rename(Year = year,\n         Month = month,\n         Day = day,\n         rainfall_total = daily_rainfall_total_mm,\n         rainfall_30 = highest_30_min_rainfall_mm,\n         rainfall_60 = highest_60_min_rainfall_mm,\n         rainfall_120 = highest_120_min_rainfall_mm,\n         mean_temp = mean_temperature_c,\n         max_temp = maximum_temperature_c,\n         min_temp = minimum_temperature_c,\n         mean_wind = mean_wind_speed_km_h,\n         max_wind = max_wind_speed_km_h)\n```\n:::\n\n\n## 3.5 Remove Missing Records\n\nDefine list of stations:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstations <- c(\"Admiralty\", \"Ang Mo Kio\", \"Changi\", \"Choa Chu Kang (South)\",\n              \"Clementi\", \"East Coast Parkway\", \"Jurong (West)\",\n              \"Jurong Island\", \"Newton\", \"Pasir Panjang\", \"Paya Lebar\",\n              \"Pulau Ubin\", \"Seletar\", \"Sembawang\", \"Sentosa Island\",\n              \"Tai Seng\", \"Tuas South\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nweather <- weather %>% \n  filter(!(Station %in% stations & (is.na(rainfall_total) | is.na(rainfall_30) | \n                                    is.na(rainfall_60) | is.na(rainfall_120) | \n                                    is.na(mean_temp) | is.na(max_temp) | \n                                    is.na(min_temp) | is.na(mean_wind) | \n                                    is.na(max_wind))))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndaily_weather <- daily_weather %>% \n  filter(!(Station %in% stations & (is.na(rainfall_total) | is.na(rainfall_30) | \n                                    is.na(rainfall_60) | is.na(rainfall_120) | \n                                    is.na(mean_temp) | is.na(max_temp) | \n                                    is.na(min_temp) | is.na(mean_wind) | \n                                    is.na(max_wind))))\n```\n:::\n\n\n## 3.6 Handling Date Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather <- weather %>%\n  mutate(\n    yearmonth = make_date(Year, Month, 1)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndaily_weather <- daily_weather %>%\n  mutate(\n    yearmonth = make_date(Year, Month, 1)\n  )\n```\n:::\n\n\n## 3.7 Derive Monthly Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a dataset with all combinations of yearmonth and Station (to keep all stations)\nall_combinations <- daily_weather %>%\n  st_drop_geometry() %>% # Drop geometry temporarily\n  distinct(yearmonth, Station) \n```\n:::\n\n\n### 3.7.1 Monthly Rainfall\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Merge the combinations back to weather_map to fill in missing rainfall data\nmonthly_rainfall <- daily_weather %>%\n  group_by(yearmonth, Station, geometry) %>%\n  summarize(\n    max_rainfall = if (all(is.na(rainfall_total))) NA_real_ else max(rainfall_total, na.rm = TRUE),\n    mean_rainfall = if (all(is.na(rainfall_total))) NA_real_ else mean(rainfall_total, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  right_join(all_combinations, by = c(\"yearmonth\", \"Station\")) %>%\n  arrange(yearmonth, Station)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmonths_2024 <- seq(ymd(\"2024-01-01\"), ymd(\"2024-12-01\"), by = \"month\")\n\nstations_missing_yearmonth <- monthly_rainfall %>%\n  filter(is.na(yearmonth)) %>%\n  mutate(yearmonth = list(months_2024)) %>% # Append rows for remaining stations\n  unnest(yearmonth)\n\nmonthly_rainfall <- monthly_rainfall %>%\n  filter(!is.na(yearmonth)) %>%\n  bind_rows(stations_missing_yearmonth) %>%\n  arrange(Station, yearmonth)\n```\n:::\n\n\n### 3.7.2 Monthly Temperature\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmonthly_temp <- daily_weather %>%\n  group_by(yearmonth, Station, geometry) %>%\n  summarize(\n    max_temp = if (all(is.na(max_temp))) NA_real_ else max(max_temp, na.rm = TRUE),\n    mean_temp = if (all(is.na(mean_temp))) NA_real_ else mean(mean_temp, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  right_join(all_combinations, by = c(\"yearmonth\", \"Station\")) %>%\n  arrange(yearmonth, Station)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmonths_2024 <- seq(ymd(\"2024-01-01\"), ymd(\"2024-12-01\"), by = \"month\")\n\nstations_missing_yearmonth <- monthly_temp %>%\n  filter(is.na(yearmonth)) %>%\n  mutate(yearmonth = list(months_2024)) %>% # Append rows for remaining stations\n  unnest(yearmonth)\n\nmonthly_temp <- monthly_temp %>%\n  filter(!is.na(yearmonth)) %>%\n  bind_rows(stations_missing_yearmonth) %>%\n  arrange(Station, yearmonth)\n```\n:::\n\n\n### 3.7.3 Monthly Wind Speed\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmonthly_wind <- daily_weather %>%\n  group_by(yearmonth, Station, geometry) %>%\n  summarize(\n    max_wind = if (all(is.na(max_wind))) NA_real_ else max(max_wind, na.rm = TRUE),\n    mean_wind = if (all(is.na(mean_wind))) NA_real_ else mean(mean_wind, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  right_join(all_combinations, by = c(\"yearmonth\", \"Station\")) %>%\n  arrange(yearmonth, Station)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmonths_2024 <- seq(ymd(\"2024-01-01\"), ymd(\"2024-12-01\"), by = \"month\")\n\nstations_missing_yearmonth <- monthly_wind %>%\n  filter(is.na(yearmonth)) %>%\n  mutate(yearmonth = list(months_2024)) %>% # Append rows for remaining stations\n  unnest(yearmonth)\n\nmonthly_wind <- monthly_wind %>%\n  filter(!is.na(yearmonth)) %>%\n  bind_rows(stations_missing_yearmonth) %>%\n  arrange(Station, yearmonth)\n```\n:::\n\n\n## 3.8 Join mpsz and weather\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_nogeom <- st_drop_geometry(daily_weather)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmap <- left_join(mpsz, weather_nogeom,\n                         by = c(\"SUBZONE_N\" = \"Station\"),\n                         relationship = \"many-to-many\")\n```\n:::\n\n\n## 3.9 Derive Parameters\n\nIn the analysis, we aim to provide several aggregations to see the monthly weather conditions in the form of geospatial map. The following are the variables that we aim to show in the chart:\n\n**Weather Parameter:**\n\n1.  Rainfall\n2.  Wind Speed\n3.  Temperature\n\n**Measurement Options:**\n\n1.  Mean\n2.  Maximum\n3.  Frequency\n\n**Time Period:**\n\n1.  Monthly\n\n### 3.9.1 Rainfall Parameters\n\nTo define the frequency of rainfall, we will use **\"Heavy Rain\"** as the baseline to define the frequency of rainfall in a defined period of time (weekly/monthly/quarterly). Any daily rainfall recorded that is above or equal to **31 mm/day** is considered as heavy rain.\n\n::: tabset-pane\n### Rainfall Parameters\n\n::: {.table .table-striped .table-hover .table-bordered}\n| Rain Type            | Total Daily Rainfall (mm) |\n|----------------------|---------------------------|\n| No Rain              | 0                         |\n| Very Light Rain      | 0.1 - 0.9                 |\n| Light Rain           | 1.0 - 10                  |\n| Moderate Rain        | 11 - 30                   |\n| **Heavy Rain**       | **31 - 70**               |\n| Very Heavy Rain      | 71 - 150                  |\n| Extremely Heavy Rain | \\> 151                    |\n:::\n:::\n\nsource: https://www.nchm.gov.bt/attachment/ckfinder/userfiles/files/Rainfall%20intensity%20classification.pdf\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Flag heavy rains in the daily_weather dataframe\ndaily_weather <- daily_weather %>%\n  mutate(heavy_rain_count = if_else(rainfall_total > 31, 1, 0))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Aggregate the total monthly frequency\nfrequency_heavy_rain <- daily_weather %>%\n  group_by(Station, yearmonth) %>%\n  summarise(frequency_heavy_rain = sum(heavy_rain_count), .groups = \"drop\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Drop the geometry column (only for non-spatial join)\nmonthly_rainfall_no_geom <- st_drop_geometry(monthly_rainfall)\n\n# 2. Perform the left join on the data (without geometry)\nmonthly_rainfall_no_geom <- left_join(monthly_rainfall_no_geom, frequency_heavy_rain,\n                                     by = c(\"Station\" = \"Station\", \n                                            \"yearmonth\" = \"yearmonth\"))\n\n# 3. Add the geometry column back to the joined dataframe\nmonthly_rainfall <- st_sf(monthly_rainfall_no_geom,\n                          geometry = st_geometry(monthly_rainfall))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmonthly_rainfall <- monthly_rainfall %>%\n  mutate(month = format(ymd(yearmonth), \"%B\"))\n```\n:::\n\n\n### 3.9.2 Temperature Parameter\n\n::: tabset-pane\n### Temperature Parameters\n\n::: {.table .table-striped .table-hover .table-bordered}\n| Heat Stress          | Temperature (°C) |\n|----------------------|------------------|\n| Low Heat Stress      | \\< 31            |\n| Moderate Heat Stress | 31 ≤ °C \\< 33    |\n| **High Heat Stress** | **≥ 33**         |\n:::\n:::\n\nsource: https://www.weather.gov.sg/heat-stress/\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrange(daily_weather$max_temp, na.rm=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 25.5 36.4\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndaily_weather <- daily_weather %>%\n  mutate(high_heat_count = if_else(max_temp >= 33, 1, 0))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfrequency_high_heat <- daily_weather %>%\n  group_by(Station, yearmonth) %>%\n  summarise(frequency_high_heat = sum(high_heat_count), .groups = \"drop\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Drop the geometry column (only for non-spatial join)\nmonthly_temp_no_geom <- st_drop_geometry(monthly_temp)\n\n# 2. Perform the left join on the data (without geometry)\nmonthly_temp_no_geom <- left_join(monthly_temp_no_geom, frequency_high_heat,\n                                     by = c(\"Station\" = \"Station\", \n                                            \"yearmonth\" = \"yearmonth\"))\n\n# 3. Add the geometry column back to the joined dataframe\nmonthly_temp <- st_sf(monthly_temp_no_geom,\n                          geometry = st_geometry(monthly_temp))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmonthly_temp <- monthly_temp %>%\n  mutate(month = format(ymd(yearmonth), \"%B\"))\n```\n:::\n\n\n### 3.9.3 Wind Speed Parameter\n\nThe parameter for wind speed is based on **Beaufort Wind Scale**. To define strong wind force, we will use wind force **7** to determine frequency of strong winds in Singapore.\n\n::: tabset-pane\n### Wind Speed Parameters\n\n::: {.table .table-striped .table-hover .table-bordered}\n| Wind Force | Description     | Speed (km/h) |\n|------------|-----------------|--------------|\n| 0          | Calm            | \\< 1         |\n| 1          | Light Air       | 1 - 5        |\n| 2          | Light Breeze    | 6 - 11       |\n| 3          | Gentle Breeze   | 12 - 19      |\n| 4          | Moderate Breeze | 20 - 28      |\n| 5          | Fresh Breeze    | 29 - 38      |\n| 6          | Strong Breeze   | 38 - 49      |\n| **7**      | **Near Gale**   | **50 - 61**  |\n| 8          | Gale            | 62 - 74      |\n| 9          | Strong Gale     | 75 - 88      |\n| 10         | Storm           | 89 - 102     |\n| 11         | Violent Storm   | 103 - 117    |\n| 12         | Hurricane       | ≥ 118        |\n:::\n:::\n\nsource: https://www.rmets.org/metmatters/beaufort-wind-scale\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrange(daily_weather$max_wind, na.rm=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  13.0 105.4\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndaily_weather <- daily_weather %>%\n  mutate(strong_wind_count = if_else(max_wind >= 50, 1, 0))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfrequency_strong_wind <- daily_weather %>%\n  group_by(Station, yearmonth) %>%\n  summarise(frequency_strong_wind = sum(strong_wind_count), .groups = \"drop\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Drop the geometry column (only for non-spatial join)\nmonthly_wind_no_geom <- st_drop_geometry(monthly_wind)\n\n# 2. Perform the left join on the data (without geometry)\nmonthly_wind_no_geom <- left_join(monthly_wind_no_geom, frequency_strong_wind,\n                                     by = c(\"Station\" = \"Station\", \n                                            \"yearmonth\" = \"yearmonth\"))\n\n# 3. Add the geometry column back to the joined dataframe\nmonthly_wind <- st_sf(monthly_wind_no_geom,\n                          geometry = st_geometry(monthly_wind))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmonthly_wind <- monthly_wind %>%\n  mutate(month = format(ymd(yearmonth), \"%B\"))\n```\n:::\n\n\n## 3.10 Remove Missing Values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmonthly_rainfall <- na.omit(monthly_rainfall)\nmonthly_temp <- na.omit(monthly_temp)\nmonthly_wind <- na.omit(monthly_wind)\n```\n:::\n\n\n## 3.11 Combine Monthly Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract geometry from monthly_temp (assuming geometry is the same across all dataframes)\ngeometry_data <- monthly_temp %>% select(Station, yearmonth, month, geometry)\n\n# Drop geometry using st_drop_geometry()\nmonthly_temp_no_geom <- monthly_temp %>% st_drop_geometry()\nmonthly_rainfall_no_geom <- monthly_rainfall %>% st_drop_geometry()\nmonthly_wind_no_geom <- monthly_wind %>% st_drop_geometry()\n\n# Perform full joins on non-spatial data\nmonthly_weather_no_geom <- monthly_temp_no_geom %>%\n  full_join(monthly_rainfall_no_geom, by = c(\"Station\", \"yearmonth\", \"month\")) %>%\n  full_join(monthly_wind_no_geom, by = c(\"Station\", \"yearmonth\", \"month\"))\n\n# Reattach the geometry column\nmonthly_weather <- left_join(monthly_weather_no_geom, geometry_data, by = c(\"Station\", \"yearmonth\", \"month\"))\n\n# Convert back to an sf object\nmonthly_weather <- st_as_sf(monthly_weather)\n```\n:::\n\n\n## 3.12 Write Data to RDS\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(monthly_weather, \"data/rds/monthly_weather.rds\", compress = \"xz\")\nwrite_rds(daily_weather, \"data/rds/daily_weather.rds\", compress = \"xz\")\nwrite_rds(monthly_rainfall, \"data/rds/monthly_rainfall.rds\", compress = \"xz\")\nwrite_rds(monthly_temp, \"data/rds/monthly_temp.rds\", compress = \"xz\")\nwrite_rds(monthly_wind, \"data/rds/monthly_wind.rds\", compress = \"xz\")\n```\n:::\n\n\n# 4 Prototype\n\n## 4.1 Inverse Distance Weighted (IDW) Visual\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrid <- terra::rast(mpsz, \n                    nrows = 690, \n                    ncols = 1075)\ngrid\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 690, 1075, 1  (nrow, ncol, nlyr)\nresolution  : 49.98037, 50.01103  (x, y)\nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncoord. ref. : SVY21 / Singapore TM (EPSG:3414) \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nxy <- terra::xyFromCell(grid, \n                        1:ncell(grid))\nhead(xy)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            x        y\n[1,] 2692.528 50231.33\n[2,] 2742.509 50231.33\n[3,] 2792.489 50231.33\n[4,] 2842.469 50231.33\n[5,] 2892.450 50231.33\n[6,] 2942.430 50231.33\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoop <- st_as_sf(as.data.frame(xy), \n                 coords = c(\"x\", \"y\"),\n                 crs = st_crs(mpsz))\ncoop <- st_filter(coop, mpsz)\nhead(coop)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 0 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 25883.42 ymin: 50231.33 xmax: 26133.32 ymax: 50231.33\nProjected CRS: SVY21 / Singapore TM\n                   geometry\n1 POINT (25883.42 50231.33)\n2  POINT (25933.4 50231.33)\n3 POINT (25983.38 50231.33)\n4 POINT (26033.36 50231.33)\n5 POINT (26083.34 50231.33)\n6 POINT (26133.32 50231.33)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nres <- gstat(formula = frequency_heavy_rain ~ 1, \n             locations = monthly_rainfall, \n             nmax = 5,\n             set = list(idp = 0))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresp <- predict(res, coop)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[inverse distance weighted interpolation]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresp$x <- st_coordinates(resp)[,1]\nresp$y <- st_coordinates(resp)[,2]\nresp$pred <- resp$var1.pred\n\nidw <- terra::rasterize(resp, grid, \n                         field = \"pred\", \n                         fun = \"mean\")\n\nwrite_rds(idw, \"data/rds/idw.rds\", compress = \"xz\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_check_fix()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n[nothing to show] no data layers defined\n```\n\n\n:::\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nℹ tmap mode set to \"plot\".\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(idw) +\n  tm_raster(col_alpha = 0.6,\n            col.scale = tm_scale(\n              values = \"brewer.blues\")) +\n  tm_title(\"IDW Mean Frequency of Heavy Rain\", size=1.5) +\n  tm_shape(monthly_weather) +\n  tm_text(\"Station\", size=1, col=\"black\", alpha = 0.7)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n── tmap v3 code detected ───────────────────────────────────────────────────────\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-49-1.png){width=1152}\n:::\n:::\n\n\n## 4.2 Monthly Maximum Rainfall by Station\n\n\n::: {.cell}\n\n```{.r .cell-code}\njan_rainfall <- monthly_rainfall %>% \n  filter(month == \"January\")\n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nℹ tmap mode set to \"plot\".\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(map) +\n  tm_layout(\n    main.title = \"Maximum Rainfall (mm) in January 2024\",\n    main.title.position = \"center\",\n    main.title.size = 1.2,\n    legend.position = c(\"RIGHT\", \"BOTTOM\"),\n    legend.title.size = 0.8,\n    legend.text.size = 0.8,\n    legend.outside = TRUE,\n    legend.outside.position = \"bottom\",\n    legend.frame = FALSE,\n    frame = TRUE\n  ) +\n  tm_shape(jan_rainfall) +\n  tm_symbols(\n    col = \"max_rainfall\",  # Measurement Parameters here\n    palette = \"Blues\",\n    title.col = \"Max Rainfall (mm)\",\n    popup.vars = c(\"Station\", \"max_rainfall\"),\n    legend.size.show = FALSE\n  ) +\n  tm_shape(jan_rainfall) +\n  tm_text(\"Station\", size = 0.7, col = \"black\", shadow = FALSE, ymod=1) +\n  tm_grid(alpha = 0.2) +\n  tm_basemap(\"CartoDB.Positron\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n[v3->v4] `tm_layout()`: use `tm_title()` instead of `tm_layout(main.title = )`\n\n\n── tmap v3 code detected ───────────────────────────────────────────────────────\n\n[v3->v4] `tm_symbols()`: migrate the argument(s) related to the scale of the\nvisual variable `fill` namely 'palette' (rename to 'values') to fill.scale =\ntm_scale(<HERE>).\n[v3->v4] `symbols()`: use 'fill' for the fill color of polygons/symbols\n(instead of 'col'), and 'col' for the outlines (instead of 'border.col').\n[v3->v4] `symbols()`: migrate the argument(s) related to the legend of the\nvisual variable `fill` namely 'title.col' (rename to 'title') to 'fill.legend =\ntm_legend(<HERE>)'\n[v3->v4] `symbols()`: use `size.legend = tm_legend_hide()` instead of\n`legend.size.show = FALSE`.\n[v3->v4] `tm_text()`: migrate the layer options 'shadow' to 'options =\nopt_tm_text(<HERE>)'\n[cols4all] color palettes: use palettes from the R package cols4all. Run\n`cols4all::c4a_gui()` to explore them. The old palette name \"Blues\" is named\n\"brewer.blues\"\nMultiple palettes called \"blues\" found: \"brewer.blues\", \"matplotlib.blues\". The first one, \"brewer.blues\", is returned.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-50-1.png){width=960}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n|---------|---------|---------|---------|\n=========================================\n                                          \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nℹ tmap mode set to \"plot\".\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(map) +\n  tm_layout(\n    main.title = \"Frequency of Heavy Rain in January 2024\",\n    main.title.position = \"center\",\n    main.title.size = 1.2,\n    legend.position = c(\"RIGHT\", \"BOTTOM\"),\n    legend.title.size = 0.8,\n    legend.text.size = 0.8,\n    legend.outside = TRUE,\n    legend.outside.position = \"bottom\",\n    legend.frame = FALSE,\n    frame = TRUE\n  ) +\n  tm_shape(jan_rainfall) +\n  tm_symbols(\n    col = \"frequency_heavy_rain\",  # Measurement Parameters here\n    palette = \"Red\",\n    title.col = \"Frequency of Heavy Rain\",\n    popup.vars = c(\"Station\", \"frequency_heavy_rain\"),\n    legend.size.show = FALSE\n  ) +\n  tm_shape(jan_rainfall) +\n  tm_text(\"Station\", size = 0.7, col = \"black\", shadow = FALSE, ymod=-1) +\n  tm_grid(alpha = 0.2) +\n  tm_basemap(\"CartoDB.Positron\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n[v3->v4] `tm_layout()`: use `tm_title()` instead of `tm_layout(main.title = )`\n\n\n── tmap v3 code detected ───────────────────────────────────────────────────────\n\n[v3->v4] `tm_symbols()`: migrate the argument(s) related to the scale of the\nvisual variable `fill` namely 'palette' (rename to 'values') to fill.scale =\ntm_scale(<HERE>).\n[v3->v4] `symbols()`: migrate the argument(s) related to the legend of the\nvisual variable `fill` namely 'title.col' (rename to 'title') to 'fill.legend =\ntm_legend(<HERE>)'\n[v3->v4] `symbols()`: use `size.legend = tm_legend_hide()` instead of\n`legend.size.show = FALSE`.\n[v3->v4] `tm_text()`: migrate the layer options 'shadow' to 'options =\nopt_tm_text(<HERE>)'\n[cols4all] color palettes: use palettes from the R package cols4all. Run\n`cols4all::c4a_gui()` to explore them. The old palette name \"Red\" is named\n\"red\" (in long format \"tableau.red\")\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-51-1.png){width=960}\n:::\n:::\n\n\n## 4.3 Prototype 3: Displaying Bar Chart for Frequency Measure\n\n### 4.3.1 Side by Side Comparison of Stations\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# These variables will act as the filter in the Shiny app\nselected_month <- \"February\"\nselected_variable <- \"frequency_strong_wind\"\n\n\nvariable_titles <- list(\n  \"frequency_heavy_rain\" = \"Heavy Rain\",\n  \"frequency_high_temperature\" = \"High Temperature\",\n  \"frequency_strong_wind\" = \"Strong Wind\"\n)\n\n\nselected_variable_title <- variable_titles[[selected_variable]]\n\n\nmonthly_weather_filtered <- monthly_weather %>%\n  filter(month == selected_month)\n\n\nggplot(monthly_weather_filtered, aes(x = Station, y = .data[[selected_variable]], fill = Station)) +\n  geom_bar(stat = \"identity\", fill=\"royalblue\") +\n  labs(\n    title = paste(\"Frequency of\", selected_variable_title, \"in\", selected_month),\n    x = \"Station\", \n    y = \"Frequency\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 90, size = 10, vjust = 0.5),\n    strip.text = element_text(size = 12),\n    legend.position = \"none\"\n  ) +\n  scale_x_discrete(expand = expansion(mult = c(0, 0)))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-52-1.png){width=960}\n:::\n:::\n\n\n### 4.3.2 Side by Side Comparison of Monthly Records\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmin_x <- as.Date(\"2023-12-01\")\nmax_x <- as.Date(\"2024-04-01\")\n\nmonthly_rainfall_station <- monthly_rainfall %>%\n  filter(Station %in% stations) %>%\n  filter(format(as.Date(yearmonth), \"%m\") %in% c(\"01\", \"02\", \"03\"))\n\n# Plot the bar charts for the selected stations\nggplot(monthly_rainfall_station, aes(x = yearmonth, y = frequency_heavy_rain)) +\n  geom_bar(stat = \"identity\", fill = \"royalblue\") +\n  labs(x = \"Month\", y = \"Frequency of Heavy Rain\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 90, size = 12, vjust = -0.0005),\n    strip.text = element_text(size = 12)\n  ) +\n  scale_x_date(\n    date_labels = \"%b\",\n    breaks = unique(monthly_rainfall_station$yearmonth),\n    limits = c(min_x, max_x),\n    expand = expansion(mult = c(0, 0))\n  ) +\n  facet_wrap(~Station, ncol = 4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-53-1.png){width=1152}\n:::\n:::\n\n\n# 5 Shiny App Plan\n\nThe geospatial map visuals will be implemented on **Shiny Web Application.** To ensure a smooth workflow and to enhance user experience, there will be 2 sub-tabs, the first tab will be showing the geospatial map and the second tab will be showing something similar to prototype 3, showing the frequency of selected weather parameters in the form of bar chart. Filter bars will be implemented on the sidebar of the shiny app, to select the following variables:\n\n1.  **Time Period Filter**: will consist of the month of January to December for 2024\n2.  **Weather Parameter Filter**: will consist of the selections of weather parameters, rainfall/ temperature/ wind speed\n3.  **Aggregation Filter**: will consist of selections of aggregations, mean/ max/ frequency\n",
    "supporting": [
      "Take-home_Ex03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}