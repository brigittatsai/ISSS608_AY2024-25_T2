---
title: "Hands-on Exercise 1"
author: "Brigitta Karen Tsai"
date: "January 16, 2025"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  message: false
  freeze: true
---

# A Layered Grammar of Graphics: ggplot2 Methods

## 1 Getting Started

### 1.1 Installing Libraries

```{r}
pacman::p_load(tidyverse)
```

### 1.2 Importing Data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

## 2 Introducing ggplot

### 2.1 R Graphics vs ggplot

#### 2.1.1 R Graphics

```{r}
hist(exam_data$MATHS)
```

#### 2.1.2 ggplot

```{r}
ggplot(data=exam_data, aes(x = MATHS)) +
  geom_histogram(bins=10, 
                 boundary = 100,
                 color="black", 
                 fill="grey") +
  ggtitle("Distribution of Maths scores")
```

## 3 Grammar of Graphics

Grammar of graphics: Breaks up graphs into semantic components such as scales and layers.

### 3.1 Layered Grammar of Graphics

A short description of each building block are as follows:

-   **Data**: The dataset being plotted.

-   **Aesthetics** take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.

-   **Geometrics**: The visual elements used for our data, such as point, bar or line.

-   **Facets** split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).

-   **Statistics**, statiscal transformations that summarise data (e.g.Â mean, confidence intervals).

-   **Coordinate systems** define the plane on which data are mapped on the graphic.

-   **Themes** modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background.

## 4 Essential Grammatical Elements in ggplot2

### 4.1 data

```{r}
ggplot(data=exam_data)
```

### 4.2 Aesthetic Mappings

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS))
```

### 4.3 geom

Geometric Objects are the actual marks we put on the plot

#### 4.3.1 geom_bar

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar()
```

#### 4.3.2 geom_dotplot

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(dotsize = 0.5)
```

The y-axis is misleading as it does not show the actual counts

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(binwidth=2.5,         
               dotsize = 0.5) +      
  scale_y_continuous(NULL,           
                     breaks = NULL)  
```

#### 4.3.3 geom_histogram()

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_histogram()       
```

default bin is 30

#### 4.3.4 Modifying a geometric object by changing geom()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20,            
                 color="black",      
                 fill="light blue")  
```

#### 4.3.5 Modifying a geometric object by changing aes()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           fill = GENDER)) +
  geom_histogram(bins=20, 
                 color="grey30")
```

#### 4.3.6 geom_density()

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_density()           
```

Add 2 kernel density lines

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS, 
           colour = GENDER)) +
  geom_density()
```

#### 4.3.7 geom_boxplot()

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS,       
           x= GENDER)) +    
  geom_boxplot()            
```

The code chunk below plots a notched plot instead of a boxplot

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_boxplot(notch=TRUE)
```

#### 4.3.8 geom_violin

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_violin()
```

#### 4.3.9 geom_point()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point()            
```

#### 4.3.10 Combining geom objects

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_boxplot() +                    
  geom_point(position="jitter", 
             size = 0.5)        
```

### 4.4 stat

#### 4.4.1 Working with stat()

The boxplots below are incomplete as the position of means are not shown

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot()
```

#### 4.4.2 stat_summary() method

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot() +
  stat_summary(geom = "point",       
               fun = "mean",         
               colour ="red",        
               size=4)               
```

#### 4.4.3 Working with stat - geom() method

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot() +
  geom_point(stat="summary",        
             fun="mean",           
             colour="red",          
             size=4)             
```

#### 4.4.4 Adding a best fit curve on a scatterplot

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(size=0.5)
```

### 4.5 Facets

#### 4.5.1 facet_wrap()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20) +
    facet_wrap(~ CLASS)
```

#### 4.5.2 facet_grid()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20) +
    facet_grid(~ CLASS)
```

### 4.6 Coordinates

#### 4.6.1 Working with Coordinate

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar()
```

The code below flips the vertical chart to horizontal bar chart

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip()
```

#### 4.6.2 Changing the y- and x-axis range

The range of x-axis and y-axis in the chart below is different

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, size=0.5)
```

Let us standardize the range

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))
```

### 4.7 Themes

#### 4.7.1 Working with theme

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_gray()
```

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_classic()
```

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_minimal()
```
